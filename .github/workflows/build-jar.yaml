name: build-jar

on:
  workflow_call:
    inputs:
      tags:
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Build with Gradle
        run: ./gradlew build

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ (startsWith(inputs.tags, 'release-') || (inputs.tags == 'latest')) && 'prod' || 'dev' }}-${{ github.run_number }}
          release_name: ${{ (startsWith(inputs.tags, 'release-') || (inputs.tags == 'latest')) && 'Stable Release' || 'Development Release' }}
          draft: false
          prerelease: ${{ !(startsWith(inputs.tags, 'release-') || (inputs.tags == 'latest')) }}

      - name: Set input tag
        run: echo "INPUT_TAG=${{ inputs.tags }}" >> $GITHUB_ENV

      - name: Publish with Gradle
        env:
          SONARTYPE_USERNAME: ${{ secrets.SONARTYPE_USERNAME }}
          SONARTYPE_USER_TOKEN: ${{ secrets.SONARTYPE_USER_TOKEN }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.SONARTYPE_USERNAME }}
          JRELEASER_MAVENCENTRAL_TOKEN: ${{ secrets.SONARTYPE_USER_TOKEN }}
        run: |
          branch_name=$(git rev-parse --abbrev-ref HEAD)
          if [[ "$branch_name" == "release-v"* ]]; then
            version_number=${branch_name:9}
            echo "Publishing release branch"
            ./gradlew publish -PbuildRelease=true -Pversion=${version_number}
          else
            echo "Publishing snapshot release"
            ./gradlew publish -Pversion="0.0.${{ github.event.pull_request.number }}-SNAPSHOT"
          fi
          ./gradlew jreleaserFullRelease

      - name: Upload lakeview jar file to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: lakeview/build/libs/LakeView-1.0-SNAPSHOT-all.jar
          asset_name: LakeView-${{ env.INPUT_TAG }}-all.jar
          asset_content_type: application/java-archive

      - name: Upload lakeview source jar file to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: lakeview/build/libs/LakeView-1.0-SNAPSHOT-sources.jar
          asset_name: LakeView-${{ env.INPUT_TAG }}-sources.jar
          asset_content_type: application/java-archive

      - name: Upload lakeview-glue jar file to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: lakeview-glue/build/libs/lakeview-glue-1.0-SNAPSHOT-all.jar
          asset_name: lakeview-glue-${{ env.INPUT_TAG }}-all.jar
          asset_content_type: application/java-archive

      - name: Upload lakeview-glue source jar file to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: lakeview-glue/build/libs/lakeview-glue-1.0-SNAPSHOT-sources.jar
          asset_name: lakeview-glue-${{ env.INPUT_TAG }}-sources.jar
          asset_content_type: application/java-archive
