name: build-jar

on:
  workflow_call:
    inputs:
      tags:
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::194159489498:role/GithubActionsPublishHudi-RepositoryPublisherRole-10H7ABJVFNSQ9
          role-session-name: HudiPublishSession
          role-duration-seconds: 900

      - name: Set Env
        run: echo "CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain onehouse --domain-owner 194159489498 --query authorizationToken --output text)" >> $GITHUB_ENV

      - name: Set TAG_PRESENT_IN_COMMIT
        run: echo "TAG_PRESENT_IN_COMMIT=${{ inputs.tags }}" >> $GITHUB_ENV

      - name: Set VERSION
        run: echo "VERSION=$(echo $TAG_PRESENT_IN_COMMIT | sed -e s/release-v//)" >> $GITHUB_ENV

      - name: Fail if version not set
        if: env.VERSION == ''
        run: exit 1

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          server-id: codeartifact
          server-username: AWS
          server-password: CODEARTIFACT_AUTH_TOKEN

      - name: Build with Gradle
        run: ./gradlew build publish

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ (startsWith(inputs.tags, 'release-') || (inputs.tags == 'latest')) && 'prod' || 'dev' }}-${{ github.run_number }}
          release_name: ${{ (startsWith(inputs.tags, 'release-') || (inputs.tags == 'latest')) && 'Stable Release' || 'Development Release' }}
          draft: false
          prerelease: ${{ !(startsWith(inputs.tags, 'release-') || (inputs.tags == 'latest')) }}

      - name: Set input tag
        run: echo "INPUT_TAG=${{ inputs.tags }}" >> $GITHUB_ENV

      - name: Upload JAR files to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/HudiMetadataExtractor-1.0-SNAPSHOT-all.jar
          asset_name: hudiMetadataExtractor-${{ env.INPUT_TAG }}-all.jar
          asset_content_type: application/java-archive

      - name: Upload JAR files to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/HudiMetadataExtractor-1.0-SNAPSHOT-sources.jar
          asset_name: hudiMetadataExtractor-${{ env.INPUT_TAG }}-sources.jar
          asset_content_type: application/java-archive
